<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:conv="clr-namespace:Avalonia.Data.Converters;assembly=Avalonia.Base"
             xmlns:drones="clr-namespace:Asv.Drones"
             xmlns:avalonia1="clr-namespace:Asv.Avalonia;assembly=Asv.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:CompileBindings="True"
             x:Class="Asv.Drones.FileBrowserView"
             x:DataType="drones:FileBrowserViewModel">
    <Design.DataContext>
        <drones:FileBrowserViewModel />
    </Design.DataContext>
    <UserControl.Resources>
        <!--TODO: move dictionary to Themes.axaml (Asv.Avalonia)-->
        <!--These resources ARE being used, despite the fact that inspector writes the opposite-->
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="Crc32CorrectBrush" Color="#FF2E7D32" />
                    <SolidColorBrush x:Key="Crc32IncorrectBrush" Color="#FFC62828" />
                    <SolidColorBrush x:Key="IconBrushDelete" Color="#FFC62828" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="Crc32CorrectBrush" Color="#FF34C759" />
                    <SolidColorBrush x:Key="Crc32IncorrectBrush" Color="#FFFF453A" />
                    <SolidColorBrush x:Key="IconBrushDelete" Color="#FFFF453A" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
        <SolidColorBrush x:Key="IconBrushDefault" Color="{DynamicResource SystemAccentColorLight2}" />
        <SolidColorBrush x:Key="IconBrushDisabled" Color="{DynamicResource SystemBaseLowColor}" />
        <SolidColorBrush x:Key="FolderBrush" Color="{DynamicResource SystemAccentColorDark2}" />
        <SolidColorBrush x:Key="FileBrush" Color="{DynamicResource SystemAccentColorLight2}" />
        <SolidColorBrush x:Key="ProgressBrush" Color="{DynamicResource SystemAccentColorLight2}" />
        <SolidColorBrush x:Key="Crc32DefaultBrush" Color="{DynamicResource SystemAccentColorLight2}" />
        <x:Double x:Key="IconSize">15</x:Double>
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="TreeViewItem" x:DataType="drones:BrowserNode">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="IsExpanded" Value="{Binding Base.IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding Base.IsSelected, Mode=TwoWay}" />
        </Style>
        <Style Selector="avalonia|MaterialIcon.folder">
            <Setter Property="Kind" Value="FolderOutline" />
            <Setter Property="Foreground" Value="{DynamicResource FolderBrush}" />
        </Style>
        <Style Selector="avalonia|MaterialIcon.folder.selected">
            <Setter Property="Kind" Value="Folder" />
            <Setter Property="Foreground" Value="{DynamicResource FolderBrush}" />
        </Style>
        <Style Selector="avalonia|MaterialIcon.folder.expanded">
            <Setter Property="Kind" Value="FolderOpenOutline" />
            <Setter Property="Foreground" Value="{DynamicResource FolderBrush}" />
        </Style>
        <Style Selector="avalonia|MaterialIcon.file">
            <Setter Property="Kind" Value="FileMarkerOutline" />
            <Setter Property="Foreground" Value="{DynamicResource FileBrush}" />
        </Style>
        <Style Selector="avalonia|MaterialIcon.file.selected" x:DataType="drones:BrowserNode">
            <Setter Property="Kind" Value="FileMarker" />
        </Style>
        <Style Selector="Button avalonia|MaterialIcon, Button avalonia|MaterialIconExt">
            <Setter Property="Button.Foreground" Value="{DynamicResource IconBrushDefault}" />
        </Style>
        <Style Selector="Button.delete avalonia|MaterialIcon, Button.delete avalonia|MaterialIconExt">
            <Setter Property="Button.Foreground" Value="{DynamicResource IconBrushDelete}" />
        </Style>
        <Style Selector="Button:disabled avalonia|MaterialIcon, Button:disabled avalonia|MaterialIconExt">
            <Setter Property="Button.Foreground" Value="{DynamicResource IconBrushDisabled}" />
            <Setter Property="Button.Opacity" Value="0.4"/>
        </Style>
        <Style Selector="Button">
            <Setter Property="Theme" Value="{DynamicResource TransparentButton}"/>
        </Style>
    </UserControl.Styles>
    <Panel>
        <avalonia1:AwaitingScreen Header="{x:Static drones:RS.FileBrowserView_AwaitingScreen_Header}" 
                                  Description="{x:Static drones:RS.FileBrowserView_AwaitingScreen_Description}" 
                                  IsVisible="{Binding !IsDeviceInitialized}"/>
        <Grid RowDefinitions="*, Auto" 
              IsVisible="{Binding IsDeviceInitialized}">
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="300"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" MinWidth="300"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Row="0"
                        Grid.Column="0"
                        Padding="8">
                    <DockPanel>
                        <StackPanel KeyboardNavigation.TabNavigation="None"
                                    DockPanel.Dock="Top" 
                                    Spacing="4">
                            <StackPanel Spacing="4"
                                        Orientation="Horizontal">
                                <Button Command="{Binding CreateLocalFolderCommand}"
                                        CommandParameter="{Binding LocalSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="FolderPlusOutline"  />
                                </Button>
                                <Button Command="{Binding LocalRenameCommand}"
                                        CommandParameter="{Binding LocalSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="Pencil" />
                                </Button>
                                <Button Command="{Binding CalculateLocalCrc32Command}"
                                        CommandParameter="{Binding LocalSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="KeyOutline" />
                                </Button>
                                <Button Classes="delete"
                                        Command="{Binding RemoveLocalItemCommand}"
                                        CommandParameter="{Binding LocalSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="Trash"  />
                                </Button>
                            </StackPanel>
                            <Grid ColumnDefinitions="*, Auto" Margin="0 0 0 4">
                                <avalonia1:SearchBoxView Grid.Column="0"
                                                         DataContext="{Binding LocalSearch}"
                                                         Margin="0 0 8 0"/>
                                <Button Grid.Column="1"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Center"
                                        Command="{Binding RefreshLocalCommand}">
                                    <avalonia:MaterialIcon Kind="Refresh" Foreground="{DynamicResource SystemAccentColorLight2}" />
                                </Button>
                            </Grid>
                        </StackPanel>
                        
                        <!--Local tree-->
                        <TreeView ItemsSource="{Binding LocalItemsTree.Items}"
                                  SelectedItem="{Binding LocalSelectedItem.Value}"
                                  drones:TreeViewBehaviors.IgnoreEnter="True"
                                  PointerPressed="TreeView_OnPointerPressed">
                            <TreeView.ItemTemplate>
                                <TreeDataTemplate ItemsSource="{Binding Items}" 
                                                  DataType="{x:Type drones:BrowserNode}">
                                    <Grid ColumnDefinitions="Auto, Auto, *, Auto">
                                        <avalonia:MaterialIcon Grid.Column="0" 
                                                               Margin="0,0,8,0"
                                                               Classes.folder="{Binding Base.HasChildren}"
                                                               Classes.file="{Binding !Base.HasChildren}"
                                                               Classes.expanded="{Binding IsExpanded,
                                                                RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                                                               Classes.selected="{Binding IsSelected,
                                                                RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                                                               Width="{DynamicResource IconSize}" 
                                                               Height="{DynamicResource IconSize}"/>
                                        <TextBlock Grid.Column="1"
                                                   VerticalAlignment="Center"
                                                   IsVisible="{Binding !Base.EditMode}"
                                                   Text="{Binding Base.Name}"/>
                                        <TextBox Grid.Column="1"
                                                 VerticalAlignment="Center"
                                                 IsVisible="{Binding Base.EditMode}"
                                                 Text="{Binding Base.EditedName.Value}">
                                            <TextBox.InnerRightContent>
                                                <Button Content="{avalonia:MaterialIconExt Kind=Check}"
                                                        Command="{Binding Base.CommitRename}"
                                                        CommandParameter="{Binding Base}"
                                                        VerticalAlignment="Stretch"
                                                        HorizontalAlignment="Stretch"
                                                        Margin="1"/>
                                            </TextBox.InnerRightContent>
                                        </TextBox>
                                        <TextBlock Grid.Column="2"
                                                   Margin="0,0,8,0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Right"
                                                   Text="{Binding Base.Crc32Hex}"
                                                   Classes.correct="{Binding Base.Crc32Status, 
                                                    Converter={x:Static conv:ObjectConverters.Equal}, 
                                                    ConverterParameter={x:Static drones:Crc32Status.Correct}}"
                                                   Classes.incorrect="{Binding Base.Crc32Status, 
                                                    Converter={x:Static conv:ObjectConverters.Equal}, 
                                                    ConverterParameter={x:Static drones:Crc32Status.Incorrect}}">
                                            <TextBlock.Styles>
                                                <Style Selector="TextBlock">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource Crc32DefaultBrush}"/>
                                                </Style>

                                                <Style Selector="TextBlock.correct">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource Crc32CorrectBrush}"/>
                                                </Style>

                                                <Style Selector="TextBlock.incorrect">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource Crc32IncorrectBrush}"/>
                                                </Style>
                                            </TextBlock.Styles>
                                        </TextBlock>
                                        <TextBlock Grid.Column="3"
                                                   Margin="0,0,8,0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Right"
                                                   Text="{Binding Base.Size}"/>
                                    </Grid>
                                </TreeDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </DockPanel>
                </Border>
                
                <!--Middle space-->
                <GridSplitter Grid.Row="0"
                              Grid.Column="1" 
                              Width="30"
                              KeyboardNavigation.TabNavigation="None"
                              IsTabStop="False"/>
                
                <StackPanel Grid.Row="0"
                            Grid.Column="1"
                            KeyboardNavigation.TabNavigation="None"
                            IsEnabled="{Binding !IsUiBlocked.Value}"
                            IsTabStop="False"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center" 
                            Margin="2"
                            Spacing="8">
                    <Button Height="50" 
                            Content="{avalonia:MaterialIconExt Kind=TransferRight}" 
                            Command="{Binding UploadCommand}"
                            IsEnabled="{Binding !IsUiBlocked.Value}"
                            CommandParameter="{Binding LocalSelectedItem.Value}"/>
                    <Button Height="50" 
                            Content="{avalonia:MaterialIconExt Kind=TransferLeft}" 
                            IsEnabled="{Binding !IsUiBlocked.Value}"
                            Command="{Binding ShowDownloadPopupCommand}"/>
                    
                    <Popup IsOpen="{Binding IsDownloadPopupOpen.Value}"
                           ShouldUseOverlayLayer="True"
                           OverlayDismissEventPassThrough="False"
                           Placement="RightEdgeAlignedBottom"
                           HorizontalOffset="12"
                           Topmost="True">
                        <Border Padding="10" 
                                CornerRadius="6">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource SystemAltHighColor}" Opacity="0.5"/>
                            </Border.Background>
                            <StackPanel>
                                <Button Content="{x:Static drones:RS.FileBrowserView_Button_Download_Content}" 
                                        Command="{Binding DownloadCommand}" 
                                        IsEnabled="{Binding !IsUiBlocked.Value}"
                                        CommandParameter="{Binding RemoteSelectedItem.Value}"
                                        Margin="0,0,0,5"/>
                                <Button Content="{x:Static drones:RS.FileBrowserView_Button_BurstDownload_Content}" 
                                        IsEnabled="{Binding !IsUiBlocked.Value}"
                                        Command="{Binding BurstDownloadCommand}"
                                        CommandParameter="{Binding RemoteSelectedItem.Value}"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                    
                </StackPanel>
                
                <Border Grid.Row="0"
                        Grid.Column="2"
                        Padding="8">
                    <DockPanel>
                        <StackPanel KeyboardNavigation.TabNavigation="None"
                                    DockPanel.Dock="Top" 
                                    Spacing="4">
                            <StackPanel Spacing="4"
                                        Orientation="Horizontal">
                                <Button Command="{Binding CreateRemoteFolderCommand}"
                                        CommandParameter="{Binding RemoteSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="FolderPlusOutline"  />
                                </Button>
                                <Button Command="{Binding RemoteRenameCommand}"
                                        CommandParameter="{Binding RemoteSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="Pencil"  />
                                </Button>
                                <Button Command="{Binding CompareSelectedItemsCommand}"
                                        CommandParameter="{Binding LocalSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="SwapHorizontalCircleOutline" />
                                </Button>
                                <Button Command="{Binding FindFileOnLocalCommand}">
                                    <avalonia:MaterialIcon Kind="FileFindOutline" />
                                </Button>
                                <Button Command="{Binding CalculateRemoteCrc32Command}"
                                        CommandParameter="{Binding RemoteSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="KeyOutline" />
                                </Button>
                                <Button Classes="delete"
                                        Command="{Binding RemoveRemoteItemCommand}"
                                        CommandParameter="{Binding RemoteSelectedItem.Value}">
                                    <avalonia:MaterialIcon Kind="Trash"  />
                                </Button>
                            </StackPanel>
                            <Grid ColumnDefinitions="*, Auto" Margin="0 0 0 4">
                                <avalonia1:SearchBoxView Grid.Column="0"
                                                         DataContext="{Binding RemoteSearch}"
                                                         Margin="0 0 8 0"/>
                                <Button Grid.Column="1"
                                        VerticalAlignment="Stretch"
                                        HorizontalAlignment="Center"
                                        Command="{Binding RefreshRemoteCommand}">
                                    <avalonia:MaterialIcon Kind="Refresh" Foreground="{DynamicResource SystemAccentColorLight2}" />
                                </Button>
                            </Grid>
                        </StackPanel>
                        
                        <!--Remote tree-->
                        <TreeView ItemsSource="{Binding RemoteItemsTree.Items}"
                                  SelectedItem="{Binding RemoteSelectedItem.Value}"
                                  drones:TreeViewBehaviors.IgnoreEnter="True"
                                  PointerPressed="TreeView_OnPointerPressed">
                            <TreeView.ItemTemplate>
                                <TreeDataTemplate ItemsSource="{Binding Items}" 
                                                  DataType="{x:Type drones:BrowserNode}">
                                     <Grid ColumnDefinitions="Auto, Auto, *, Auto">
                                        <avalonia:MaterialIcon Grid.Column="0" 
                                                               Margin="0,0,8,0"
                                                               Classes.folder="{Binding Base.HasChildren}"
                                                               Classes.file="{Binding !Base.HasChildren}"
                                                               Classes.expanded="{Binding IsExpanded,
                                                                RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                                                               Classes.selected="{Binding IsSelected,
                                                                RelativeSource={RelativeSource AncestorType=TreeViewItem}}"
                                                               Width="{DynamicResource IconSize}" 
                                                               Height="{DynamicResource IconSize}"/>
                                        <TextBlock Grid.Column="1"
                                                   VerticalAlignment="Center"
                                                   IsVisible="{Binding !Base.EditMode}"
                                                   Text="{Binding Base.Name}"/>
                                        <TextBox Grid.Column="1"
                                                 VerticalAlignment="Center"
                                                 IsVisible="{Binding Base.EditMode}"
                                                 Text="{Binding Base.EditedName.Value}">
                                            <TextBox.InnerRightContent>
                                                <Button Content="{avalonia:MaterialIconExt Kind=Check}"
                                                        Command="{Binding Base.CommitRename}"
                                                        CommandParameter="{Binding Base}"
                                                        VerticalAlignment="Stretch"
                                                        HorizontalAlignment="Stretch"
                                                        Margin="1"/>
                                            </TextBox.InnerRightContent>
                                        </TextBox>
                                        <TextBlock Grid.Column="2"
                                                   Margin="0,0,8,0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Right"
                                                   Text="{Binding Base.Crc32Hex}"
                                                   Classes.correct="{Binding Base.Crc32Status, 
                                                    Converter={x:Static conv:ObjectConverters.Equal}, 
                                                    ConverterParameter={x:Static drones:Crc32Status.Correct}}"
                                                   Classes.incorrect="{Binding Base.Crc32Status, 
                                                    Converter={x:Static conv:ObjectConverters.Equal}, 
                                                    ConverterParameter={x:Static drones:Crc32Status.Incorrect}}">
                                            <TextBlock.Styles>
                                                <Style Selector="TextBlock">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource Crc32DefaultBrush}"/>
                                                </Style>

                                                <Style Selector="TextBlock.correct">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource Crc32CorrectBrush}"/>
                                                </Style>

                                                <Style Selector="TextBlock.incorrect">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource Crc32IncorrectBrush}"/>
                                                </Style>
                                            </TextBlock.Styles>
                                        </TextBlock>
                                        <TextBlock Grid.Column="3"
                                                   Margin="0,0,8,0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Right"
                                                   Text="{Binding Base.Size}"/>
                                    </Grid>
                                </TreeDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </DockPanel>
                </Border>
            </Grid>
            <Grid Grid.Row="1" ColumnDefinitions="*, Auto" Margin="0 4 0 0"
                  IsVisible="{Binding IsProgressVisible.Value}">
                <ProgressBar Grid.Column="0"
                             Height="10"
                             Foreground="{DynamicResource ProgressBrush}"
                             Value="{Binding Progress.Value}"
                             Minimum="0"
                             Maximum="1"/>
                <Button Grid.Column="1"
                        VerticalAlignment="Center"
                        Command="{Binding CancelTransferCommand}"
                        IsEnabled="{Binding IsTransferInProgress.Value}">
                    <avalonia:MaterialIcon Kind="Close"/>
                </Button>
            </Grid>
        </Grid>
    </Panel>
</UserControl>
