name: Build and Release

on:
  workflow_call:

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Setup NuGet config
        env:
          NUGET_USERNAME: ${{ secrets.USER_NAME }}
          NUGET_PASSWORD: ${{ secrets.NUGET_AUTH_TOKEN }}
        run: |
          echo '<configuration>' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '<packageSources>' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '<add key="nuget.org" value="https://api.nuget.org/v3/index.json" protocolVersion="3" />' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '<add key="asv" value="https://nuget.pkg.github.com/asv-soft/index.json" />' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '</packageSources>' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '<packageSourceCredentials>' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '<asv>' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '<add key="Username" value="$NUGET_USERNAME" />' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '<add key="ClearTextPassword" value="$NUGET_PASSWORD" />' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '</asv>' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '</packageSourceCredentials>' >> D:\a\asv-drones\asv-drones\NuGet.Config
          echo '</configuration>' >> D:\a\asv-drones\asv-drones\NuGet.Config

      - name: Install dependencies
        run: |
          dotnet restore ./src/Asv.Drones.Gui.Api/Asv.Drones.Gui.Api.csproj
          dotnet restore ./src/Asv.Drones.Gui/Asv.Drones.Gui.csproj
          dotnet restore ./src/Asv.Drones.Gui.Desktop/Asv.Drones.Gui.Desktop.csproj

      - name: Build
        run: |
          dotnet restore ./src/Asv.Drones.Gui.Api/Asv.Drones.Gui.Api.csproj --configuration Release --no-restore
          dotnet restore ./src/Asv.Drones.Gui/Asv.Drones.Gui.csproj --configuration Release --no-restore
          dotnet restore ./src/Asv.Drones.Gui.Desktop/Asv.Drones.Gui.Desktop.csproj --configuration Release --no-restore

      # here you must define path to your .csproj
      - name: Publish project for installer
        run: dotnet publish ./src/Asv.Drones.Gui.Desktop/Asv.Drones.Gui.Desktop.csproj -c Release -o ./publish/app

      - name: Install NSIS
        run: choco install nsis

      #here you must define path to your .nsi file (it is used for installer setup and creation)
      - name: Create EXE installer
        run: makensis ./win-64-install.nsi

      - name: List output files
        run: Get-ChildItem -Path ./publish/app -Force

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}